import numpy as np
import matplotlib.pyplot as plt

states = [
    (0.00e+00, 0.00e+00, 1.00e+00),
    (2.99e-01, 7.90e-01, 9.90e-01),
    (1.13e+00, 1.42e+00, 9.81e-01),
    (2.33e+00, 1.69e+00, 9.75e-01),
    (3.60e+00, 1.70e+00, 9.73e-01),
    (4.86e+00, 1.70e+00, 9.70e-01),
    (6.13e+00, 1.70e+00, 9.68e-01),
    (7.39e+00, 1.70e+00, 9.65e-01),
    (8.66e+00, 1.70e+00, 9.63e-01),
    (9.67e+00, 8.98e-01, 9.58e-01),
    (1.00e+01, 0.00e+00, 9.49e-01),
]
controls = [
    (1.10e+00, 0., 0.),
    (1.10e+00, 0., 0.),
    (1.10e+00, 0., 0.),
    (5.78e-01, 0., 0.),
    (5.78e-01, 0., 0.),
    (5.78e-01, 0., 0.),
    (5.78e-01, 0., 0.),
    (5.78e-01, 0., 0.),
    (2.12e-01, 0., 0.),
    (1.10e+00, 0., 0.),
    (1.10e+00, 0., 0.),
]

# SHORTEST PATH EXAMPLE
states_shortest = [
    (2.232,  1.226,  0.677),
    (2.57320109,  1.49477017,  0.673975),
    (2.96299342,  1.61883705,  0.6722927),
    (3.37040775,  1.63964348,  0.67143214),
    (3.77586276,  1.60537274,  0.67096192),
    (4.16945872,  1.54572299,  0.67068064),
    (4.54695122,  1.4767992,  0.67049711),
    (4.90673007,  1.40403137,  0.6703773),
    (5.24724991,  1.32287318,  0.6703186),
    (5.56435378,  1.21728623,  0.67031511),
    (5.84829193,  1.05869421,  0.67024591),
    (6.08236532,  0.81943457,  0.66970594),
    (6.25059213,  0.53113146,  0.6685513),
    (6.35586368,  0.31328949,  0.66780634),
    (6.41778898,  0.18291026,  0.66752484),
    (6.44816763,  0.06048255,  0.6672631),
    (6.45323999, -0.01986527,  0.66714839),
    (6.44406095, -0.05359816,  0.66712829),
    (6.42890335, -0.06768397,  0.6671249),
    (6.41066256, -0.07826166,  0.66712306),
    (6.394, -0.055,  0.66711316),
    (6.394, -0.055,  0.275),
    (6.39115445,  0.032297,  0.27497688),
    (6.40578742,  0.08458161,  0.2749684),
    (6.43362672,  0.13777414,  0.27495908),
    (6.47728142,  0.21069282,  0.27494043),
    (6.54342279,  0.31674131,  0.27489765),
    (6.64191724,  0.46762299,  0.27480033),
    (6.78509522,  0.67078097,  0.27459078),
    (6.98523686,  0.91840605,  0.27418878),
    (7.24787855,  1.16698987,  0.2735784),
    (7.56068853,  1.32364453,  0.27299085),
    (7.89023203,  1.31351427,  0.27270783),
    (8.2007929,  1.18100209,  0.27264027),
    (8.47313533,  1.00916179,  0.27263391),
    (8.69520773,  0.77986181,  0.27261304),
    (8.84938358,  0.46538397,  0.27243733),
    (8.93206412,  0.2013823,  0.27226233),
    (8.97419746,  0.13635504,  0.27225175),
    (9.07282829,  0.64079174,  0.27139943),
    (9.33724229,  1.42506775,  0.26847712),
    (9.572,  0.506,  0.26690096)
]

controls_shortest = [
    (2.232, 0, 0),
    (2.57320109, 0, 0),
    (2.96299342, 0, 0),
    (3.37040775, 0, 0),
    (3.77586276, 0, 0),
    (4.16945872, 0, 0),
    (4.54695122, 0, 0),
    (4.90673007, 0, 0),
    (5.24724991, 0, 0),
    (5.56435378, 0, 0),
    (5.84829193, 0, 0),
    (6.08236532, 0, 0),
    (6.25059213, 0, 0),
    (6.35586368, 0, 0),
    (6.41778898, 0, 0),
    (6.44816763, 0, 0),
    (6.45323999, 0, 0),
    (6.44406095, 0, 0),
    (6.42890335, 0, 0),
    (6.41066256, 0, 0),
    (6.394, 0, 0),
    (6.394, 0, 0),
    (6.39115445, 0, 0),
    (6.40578742, 0, 0),
    (6.43362672, 0, 0),
    (6.47728142, 0, 0),
    (6.54342279, 0, 0),
    (6.64191724, 0, 0),
    (6.78509522, 0, 0),
    (6.98523686, 0, 0),
    (7.24787855, 0, 0),
    (7.56068853, 0, 0),
    (7.89023203, 0, 0),
    (8.2007929, 0, 0),
    (8.47313533, 0, 0),
    (8.69520773, 0, 0),
    (8.84938358, 0, 0),
    (8.93206412, 0, 0),
    (8.97419746, 0, 0),
    (9.07282829, 0, 0),
    (9.33724229, 0, 0),
    (9.572, 0, 0)
]


states_shortest_without_init = [
    (2.232, 1.226, 0.677),
    (2.392011913257706, 1.3670174000164454, 0.6754875000000002),
    (2.573201097076209, 1.494770137463421, 0.6739752552594137),
    (2.764578685352632, 1.5659396475996732, 0.6730688148686917),
    (2.962169207628764, 1.5949451072466727, 0.6725317887412415),
    (3.161672131697745, 1.597060274822019, 0.6721931226734902),
    (3.3603204433070255, 1.5816163141809607, 0.6719707429362625),
    (3.5563279100040055, 1.5550194649660316, 0.67181888012873),
    (3.74860637806255, 1.522063983191002, 0.6717094281344969),
    (3.936609887472236, 1.4866521795253176, 0.6716236499667906),
    (4.1202533714590786, 1.4522696517333498, 0.6715475077022754),
    (4.299885537208789, 1.4223774400341813, 0.6714679157604481),
    (4.476310721517113, 1.40080285473705, 0.6713681920712266),
    (4.650859357532625, 1.3921253854090068, 0.6712208478536252),
    (4.825492741252724, 1.4018408085673315, 0.6709760997101724),
    (5.002872102029666, 1.4356368346137567, 0.6705496515918573),
    (5.186196359822939, 1.4964533123768142, 0.6698346572865443),
    (5.378444059556089, 1.5779703773202283, 0.6688002783069046),
    (5.580759455924216, 1.6574936825892295, 0.6676741918786239),
    (5.79065798902912, 1.7000000000003275, 0.6668924622028265),
    (6.003157988599229, 1.6999999999996633, 0.6664748684657408),
    (6.213334172028223, 1.6635831305631126, 0.6663037795157929),
    (6.416738000159646, 1.5923278624714756, 0.666276357137186),
    (6.610734174548368, 1.5131478392337638, 0.6662722386979544),
    (6.795515568214334, 1.4446213448494065, 0.666265980391452),
    (6.97304093093288, 1.3966364904583315, 0.6662388385471761),
    (7.146128123365828, 1.3731646318859716, 0.666155454286413,),
    (7.317878973400916, 1.3748205915380933, 0.6659688687203194),
    (7.491350674269789, 1.4002865240674844, 0.6656298141598829),
    (7.669363345994314, 1.4470879207195122, 0.6650939332927197),
    (7.854317176119483, 1.5110002145370047, 0.6643377346401943),
    (8.047880622502806, 1.584602136613072, 0.6633904070984987),
    (8.250458632995219, 1.6552255474281437, 0.6623782240238637),
    (8.46021877058291, 1.7000000000008917, 0.6615781241581239),
    (8.672718770959015, 1.700000000000522, 0.6611606986729653),
    (8.883930893845731, 1.6798222987435085, 0.6608912103438761),
    (9.082455803062246, 1.5001634818709115, 0.6606441715242906),
    (9.252275933471669, 1.2216314656638043, 0.6591316715242908),
    (9.388866722401483, 0.9672428068184719, 0.657619171524291,),
    (9.49482285912661, 0.7305108522175777, 0.6561083620460305),
    (9.571999999999985, 0.5060000000000004, 0.6545958620460307),
]
controls_shortest_without_init = [
    (1.1, 0., 0.),
    (1.1, 0., 0.),
    (0.8523706999847624, 0., 0.),
    (0.655867806669082, 0., 0.),
    (0.5208249009106092, 0., 0.),
    (0.4220541399103991, 0., 0.),
    (0.3487926564323084, 0., 0.),
    (0.2961193729304409, 0., 0.),
    (0.2621395033475161, 0., 0.),
    (0.24695018084357356, 0., 0.),
    (0.25243742300944677, 0., 0.),
    (0.28251401487119265, 0., 0.),
    (0.34336258331538094, 0., 0.),
    (0.44250543387976343, 0., 0.),
    (0.5840920444806721, 0., 0.),
    (0.7563040699036543, 0., 0.),
    (0.9096734477917583, 0., 0.),
    (0.9491538641488922, 0., 0.),
    (0.7908723871660555, 0., 0.),
    (0.5780013567854869, 0., 0.),
    (0.3713187388897785, 0., 0.),
    (0.14984871529746846, 0., 0.),
    (0.059774256982221094, 0., 0.),
    (0.07185409806953376, 0., 0.),
    (0.1476577908152147, 0., 0.),
    (0.2583751579794792, 0., 0.),
    (0.3863872292426039, 0., 0.),
    (0.5208221519311982, 0., 0.),
    (0.654758138508351, 0., 0.),
    (0.7777910667132821, 0., 0.),
    (0.870555645021121, 0., 0.),
    (0.8998863182005723, 0., 0.),
    (0.8003324485489864, 0., 0.),
    (0.5779936326575776, 0., 0.),
    (0.4643174620412688, 0., 0.),
    (-0.4447000992821474, 0., 0.),
    (-1.1, 0., 0.),
    (-1.1, 0., 0.),
    (-1.0993852648220173, 0., 0.),
    (-1.1, 0., 0.),
    (-1.1, 0., 0.),
]

cost = 7.44e+00
cost_shortest = 10.000000000000366
cost_shortest_without_init = 4.999999999999746

if __name__ == '__main__':

    # plot shortest path
    fig = plt.figure(1)
    states_shortest_arr = np.array(states_shortest)
    states_shortest_without_init_arr = np.array(states_shortest_without_init)
    plt.plot(np.arange(len(states_shortest)),
             states_shortest_arr, label='states_shortest')
    plt.plot(np.arange(len(states_shortest_without_init)),
             states_shortest_without_init_arr,
             label='states_shortest_without_init')

    plt.legend()
    fig = plt.figure(2)
    controls_shortest_arr = np.array(controls_shortest)
    controls_shortest_without_init_arr = np.array(
        controls_shortest_without_init)
    plt.plot(np.arange(len(controls_shortest)),
             controls_shortest_arr, label='controls_shortest')
    plt.plot(np.arange(len(controls_shortest_without_init)),
             controls_shortest_without_init_arr,
             label='controls_shortest_without_init')
    plt.legend()

    # Plot the graphs
    plt.show()
